// SPDX-FileCopyrightText: Â© 2021 ChiselStrike <info@chiselstrike.com>

syntax = "proto3";

package chisel;

message StatusRequest { }

message StatusResponse {
  string server_id = 2;
  string message = 1;
}

message AddTypeRequest {
  string name = 1;
  repeated FieldDefinition field_defs = 2;
}

message AddTypeResponse {
  string message = 1;
}

message VersionDefinition {
  string version = 1;
  repeated TypeDefinition type_defs = 2;
  repeated EndpointDefinition endpoint_defs = 3;
  repeated LabelPolicyDefinition label_policy_defs = 4;
}

message TypeDefinition {
  string name = 1;
  repeated FieldDefinition field_defs = 2;
}

message FieldDefinition {
  string name = 1;
  TypeMsg field_type = 2;
  repeated string labels = 3;
  bool is_optional = 4;
  optional string default_value = 5;
  bool is_unique = 6;
}

message TypeMsg {
  oneof type_enum {
    bool string = 1;
    bool number = 2;
    bool bool = 3;
    string entity = 4;
    bool date = 5;
  };
}

message EndpointDefinition {
  string path = 1;
}

message LabelPolicyDefinition {
  string label = 1;
}

message DescribeRequest {
}

message DescribeResponse {
  repeated VersionDefinition version_defs = 1;
}

message RestartRequest { }

message RestartResponse {
  string server_id = 2;
  bool ok = 1;
}

message PolicyUpdateRequest {
  string policy_config = 1;
}

message ChiselApplyRequest {
   repeated AddTypeRequest types = 1;
   repeated IndexCandidate index_candidates = 8;

   // Location to code map. Includes all modules compiled into JS. The
   // endpoints themselves start with "endpoints/"
   // FIXME: It is missing non-endpoints for now.
   map<string, string> sources = 2;

   repeated PolicyUpdateRequest policies = 3;
   bool allow_type_deletion = 4;
   string version = 5;
   string version_tag = 6;
   string app_name = 7;
}

message ChiselApplyResponse {
   repeated string types = 1;
   repeated string endpoints = 2;
   repeated string labels = 3;
}

message ChiselDeleteRequest {
   string version = 1;
}

message ChiselDeleteResponse {
   string result = 1;
}

message PopulateRequest {
    string to_version = 1;
    string from_version = 2;
}

message PopulateResponse {
    string msg = 1;
}

message IndexCandidate {
    string entity_name = 1;
    repeated string properties = 2;
}

service ChiselRpc {
  rpc GetStatus (StatusRequest) returns (StatusResponse);
  rpc Apply(ChiselApplyRequest) returns (ChiselApplyResponse);
  rpc Populate(PopulateRequest) returns (PopulateResponse);
  rpc Delete(ChiselDeleteRequest) returns (ChiselDeleteResponse);
  rpc Describe (DescribeRequest) returns (DescribeResponse);
  rpc Restart (RestartRequest) returns (RestartResponse);
}
