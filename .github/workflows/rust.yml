name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  nightly-version: nightly-2022-03-15
  POSTGRES_PASSWORD: postgres

jobs:
  build:
    runs-on: self-hosted
    steps:
    - name: checkout repo
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Make some room available
      id: makeroom
      run: "sudo rm -rf /usr/local/lib/android && sudo rm -rf /usr/share/dotnet"

    - name: Install lld
      id: lld
      run: "sudo apt-get -y install lld"

    - name: Install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
          components: rustfmt, clippy

    - uses: actions/setup-node@v3
      with:
          node-version: 16

    - name: Install nightly rust toolchain
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ env.nightly-version }}
          components: rustfmt, clippy

    - name: set up cache
      uses: Swatinem/rust-cache@v1
      with:
          key: ${{ env.nightly-version }}

    - name: set up node cache
      uses: actions/cache@v2
      with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Cargo config
      run: |
          mkdir -p ~/.cargo
          cp scripts/cargo-config.toml ~/.cargo/config.toml

    - name: Build debug mode binaries
      uses: actions-rs/cargo@v1
      with:
          command: build
          args: --verbose

    - name: Build cli in isolation
      uses: actions-rs/cargo@v1
      with:
          command: build
          args: --verbose -p cli

    - name: Build server in isolation
      uses: actions-rs/cargo@v1
      with:
          command: build
          args: --verbose -p server

    - name: run unit tests
      uses: actions-rs/cargo@v1
      with:
          command: test

  postgres-test:
    runs-on: self-hosted
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install lld
      id: lld
      run: "sudo apt-get -y install lld"

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
          components: rustfmt, clippy

    - name: Configure Rust cache
      uses: Swatinem/rust-cache@v1

    - name: Configure Node cache
      uses: actions/cache@v2
      with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Cargo config
      run: |
          mkdir -p ~/.cargo
          cp scripts/cargo-config.toml ~/.cargo/config.toml

    - name: Run integration tests against Postgres
      uses: actions-rs/cargo@v1
      with:
          command: test
          args: -p cli --test integration_tests -- --database postgres --database-user postgres --database-password "$POSTGRES_PASSWORD"
