# SPDX-FileCopyrightText: Â© 2021 ChiselStrike <info@chiselstrike.com>

# RUN: sh -e @file

cp examples/person.ts "$TEMPDIR/models"

cd "$TEMPDIR"

cat << EOF > "$TEMPDIR/routes/bad_id.ts"
import { Person } from "../models/person.ts";

export default async function chisel(req: Request) {
    const filtered = new Person();
    filtered.id = "badid";
    filtered.first_name = "Glauber";

    await filtered.save();
    return new Response("Ok");
}
EOF

cat << EOF > "$TEMPDIR/routes/store_with_id.ts"
import { Person } from "../models/person.ts";

export default async function chisel(req: Request) {
    const filtered = new Person();
    filtered.id = "6b9ebbff-46b4-4759-9dbd-850cdcb10c92";
    filtered.first_name = "Glauber";
    await filtered.save();
    return new Response("Ok");
}
EOF

cat << EOF > "$TEMPDIR/routes/find_by_id.ts"
import { Person } from "../models/person.ts";

export default async function chisel(req: Request) {
    const glauber = await Person.findOne({
        id: "6b9ebbff-46b4-4759-9dbd-850cdcb10c92"
    });
    return new Response("[" + glauber!.first_name + "]");
}
EOF

cat << EOF > "$TEMPDIR/routes/store_no_id.ts"
import { Person } from "../models/person.ts";

export default async function chisel(req: Request) {
    const filtered = new Person();
    filtered.first_name = "Glauber";
    await filtered.save();
    return new Response("Ok");
}
EOF

cat << EOF > "$TEMPDIR/routes/update_by_id.ts"
import { Person } from "../models/person.ts";

export default async function chisel(req: Request) {
    const filtered = new Person();
    filtered.id = "6b9ebbff-46b4-4759-9dbd-850cdcb10c92";
    filtered.first_name = "not-Glauber";
    return new Response("Ok");
}
EOF

cat << EOF > "$TEMPDIR/routes/count_glaubers.ts"
import { Person } from "../models/person.ts";

export default async function chisel(req: Request) {
    let count = 0;
    const rows = await Person.findMany({"first_name":  "Glauber"});
    for await (let row of rows) {
        count += 1
    }
    return new Response(String(count));
}
EOF

$CHISEL apply
# CHECK: Applied:

$CURL -X POST $CHISELD_HOST/dev/bad_id  2>&1 || echo
# CHECK: invalid ID 'badid'

$CURL -X POST $CHISELD_HOST/dev/store_with_id
# CHECK: Ok

$CURL -X POST $CHISELD_HOST/dev/find_by_id
# CHECK: [Glauber]

$CURL $CHISELD_HOST/dev/count_glaubers
# CHECK: 1

$CURL -X POST $CHISELD_HOST/dev/store_no_id
# CHECK: Ok

$CURL $CHISELD_HOST/dev/count_glaubers
# CHECK: 2

$CURL -X PUT $CHISELD_HOST/dev/update_by_id
# CHECK: Ok

$CURL $CHISELD_HOST/dev/count_glaubers
# CHECK: 1

