# SPDX-FileCopyrightText: Â© 2021 ChiselStrike <info@chiselstrike.com>

# RUN: sh -e @file

# Used in the docs. If you have to change this file, you likely have to change
# the docs too
cat << EOF > "$TEMPDIR/models/post.ts"
import { ChiselEntity, unique } from "@chiselstrike/api"

export class BlogPost extends ChiselEntity {
    @unique relUrl: string;
    content: string;
}
EOF
cat << EOF > "$TEMPDIR/endpoints/post.ts"
import { BlogPost } from "../models/post.ts";
import { responseFromJson } from "@chiselstrike/api";

export default async function chisel(req: Request) {
    if (req.method == 'POST') {
        const payload = await req.json();
        const content = payload["content"] ?? "";
        // mandatory!
        const relUrl = payload["relUrl"];
        if (relUrl === undefined) {
            return new Response("Missing relUrl", { status: 400 });
        }
        const created = BlogPost.build({content, relUrl});
        await created.save();
        return responseFromJson('inserted ' + created.id);
    } else if (req.method == 'GET') {
        const comments = await BlogPost.findMany({});
        return responseFromJson(comments);
    } else {
        return new Response("Wrong method", { status: 405 });
    }
}
EOF

cd "$TEMPDIR"
$CHISEL apply
$CHISEL describe

# CHECK: @unique relUrl: string;

$CURL -d '{ "relUrl": "post.html", "content": "We at ChiselStrike are so happy to have you with us!" }' -X POST http://localhost:8080/dev/post
# CHECK: HTTP/1.1 200 OK

$CURL http://localhost:8080/dev/post
# CHECK: HTTP/1.1 200 OK
# CHECK: "relUrl":"post.html","content":"We at ChiselStrike are so happy to have you with us!"

$CURL -d '{ "relUrl": "post.html", "content": "We at ChiselStrike are so happy to have you with us!" }' -X POST http://localhost:8080/dev/post
# CHECK: HTTP/1.1 500 Internal Server Error
# CHECK: [[(UNIQUE constraint failed|unique constraint)]]

# evolving types now
cat << EOF > "$TEMPDIR/models/post.ts"
import { ChiselEntity, unique } from "@chiselstrike/api"

export class BlogPost extends ChiselEntity {
    @unique relUrl: string;
    @unique content: string;
}
EOF

$CHISEL apply 2>&1 || echo
# CHECK Error: unsafe to replace type: BlogPost. Reason: adding uniqueness to field content. Incompatible change

cat << EOF > "$TEMPDIR/models/post.ts"
import { ChiselEntity } from "@chiselstrike/api"

export class BlogPost extends ChiselEntity {
    relUrl: string;
    content: string;
}
EOF

$CHISEL apply
# CHECK Model defined: BlogPost
