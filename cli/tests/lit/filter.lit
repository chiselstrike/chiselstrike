# SPDX-FileCopyrightText: Â© 2021 ChiselStrike <info@chiselstrike.com>

# RUN: sh -e @file

cp examples/person.ts "$TEMPDIR/models"
cp examples/store.js "$TEMPDIR/endpoints"

cat << EOF > "$TEMPDIR/endpoints/query.ts"
export default async function chisel(req: Request) {
    let ret = "";
    const filtered = Person.findMany({"last_name":  "Costa",
                                                       "first_name": "Glauber",
                                                       "age":        666,
                                                       "human":      true});
    for await (let row of filtered) {
        ret += row.first_name + " " + row.last_name;
    }
    return new Response(ret);
}
EOF

cd "$TEMPDIR"
$CHISEL apply

# CHECK: Type defined: Person
# CHECK: End point defined: /dev/query
# CHECK: End point defined: /dev/store

$CURL --data '{
    "first_name":"Glauber",
    "last_name":"Costa",
    "age": 666,
    "human": true,
    "height": 10.01
}' -o - $CHISELD_HOST/dev/store

# CHECK: ok

$CURL -o - $CHISELD_HOST/dev/query

# CHECK: HTTP/1.1 200 OK
# CHECK: Glauber Costa
#
$CURL --data '{
    "first_name":"notGlauber",
    "last_name":"notCosta",
    "age": 666,
    "human": false,
    "height": 10.01
}' -o - $CHISELD_HOST/dev/store

## filter with undefined values
cat << EOF > "$TEMPDIR/endpoints/query.ts"
export default async function chisel(req: Request) {
    const url = new URL(req.url);
    const first_name = url.searchParams.get("first_name") ?? undefined;
    const filtered = Person.all().filter({first_name});
    let ret = "[";
    for await (let row of filtered) {
        ret += row.last_name;
    }
    ret += "]";
    return new Response(ret);
}
EOF

$CHISEL apply
$CURL -o - $CHISELD_HOST/dev/query?first_name="Glauber"
# CHECK: [Costa]
$CURL -o - $CHISELD_HOST/dev/query?first_name="123"
# CHECK: []
$CURL -o - $CHISELD_HOST/dev/query
# CHECK: [CostanotCosta]

cat << EOF > "$TEMPDIR/policies/pol.yaml"
labels:
  - name: pii
    transform: anonymize
EOF

$CHISEL apply
$CURL -o - $CHISELD_HOST/dev/query?first_name="Glauber"
# CHECK: [xxxxx]
$CURL -o - $CHISELD_HOST/dev/query?first_name="123"
# CHECK: []
$CURL -o - $CHISELD_HOST/dev/query
# CHECK: [xxxxxxxxxx]
