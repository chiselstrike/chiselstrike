# SPDX-FileCopyrightText: Â© 2021 ChiselStrike <info@chiselstrike.com>

# RUN: sh -e @file

cp examples/person.ts "$TEMPDIR/types"

cat << EOF > "$TEMPDIR/endpoints/query.ts"
export default async function chisel(req: Request) {
    const filtered = Chisel.Person.findMany({"foo": "bar"});
    let ret = "";
    for await (let row of filtered) {
        ret += row.first_name + " " + row.last_name + "\n";
    }
    return new Response(ret);
}
EOF

cd "$TEMPDIR"
$CHISEL apply

# CHECK: Type defined: Person
# CHECK: End point defined: /dev/query

$CURL -o - $CHISELD_HOST/dev/query

# CHECK: HTTP/1.1 500 Internal Server Error
# CHECK: Uncaught Error: error returned from database: no such column: foo
