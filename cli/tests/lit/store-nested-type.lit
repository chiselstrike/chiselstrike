# SPDX-FileCopyrightText: Â© 2022 ChiselStrike <info@chiselstrike.com>

# RUN: sh -e @file

cat << EOF > "$TEMPDIR/models/types.ts"
export class Person extends ChiselEntity {
   firstName: string;
   lastName: string;
}
export class Company extends ChiselEntity {
   name: string;
   ceo: Person;
}
EOF

cat << EOF > "$TEMPDIR/endpoints/store_adalbrecht.js"
export default async function chisel(req: Request) {
    let ceo = new Person();
    ceo.firstName = "This will be filled later";
    ceo.lastName = "Neuer";

    let company = new Company();
    company.name = "This is also going to be filled later";
    company.ceo = ceo;

    await company.save();

    company.name = "Bananas inc.";
    ceo.firstName = "Adalbrecht";
    await company.save();

    return new Response('ok');
}
EOF

cat << EOF > "$TEMPDIR/endpoints/query_people.ts"
export default async function chisel(req: Request) {
    let ret = "[";
    for await (let person of Chisel.Person) {
        ret += "(" + person.firstName + " " + person.lastName + ") ";
    }
    return new Response(ret + "]");
}
EOF

cat << EOF > "$TEMPDIR/endpoints/query_companies.ts"
export default async function chisel(req: Request) {
    let ret = "[";
    for await (let company of Chisel.Company) {
        ret += "(" + company.name + " " + company.ceo + ") ";
    }
    return new Response(ret + "]");
}
EOF

cd "$TEMPDIR"
$CHISEL apply

# CHECK: Type defined: Person
# CHECK: Type defined: Company
# CHECK: End point defined: /dev/query_companies
# CHECK: End point defined: /dev/query_people
# CHECK: End point defined: /dev/store_adalbrecht

$CURL -X POST $CHISELD_HOST/dev/store_adalbrecht
# CHECK: ok

$CURL -o - $CHISELD_HOST/dev/query_people
# CHECK: HTTP/1.1 200 OK
# CHECK: [(Adalbrecht Neuer) ]

$CURL -o - $CHISELD_HOST/dev/query_companies
# CHECK: HTTP/1.1 200 OK
# CHECK: [(Bananas inc. undefined) ]
