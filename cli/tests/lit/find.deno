# SPDX-FileCopyrightText: Â© 2021 ChiselStrike <info@chiselstrike.com>

# RUN: sh -e @file

cp examples/person.ts "$TEMPDIR/models"
cp examples/find.js "$TEMPDIR/endpoints"
cp examples/store.js "$TEMPDIR/endpoints/ins.js"

cat << EOF > "$TEMPDIR/endpoints/find_many.ts"
import { Person } from "../models/person.ts";

export default async function chisel(req: Request) {
    const url = new URL(req.url);
    const first_name = url.searchParams.get("first_name");
    if (first_name == undefined) {
        throw Error("first_name parameter must be specified.");
    }

    const filtered = await Person.findMany({"first_name": first_name}, 1);
    const results = filtered.map(p => p.first_name);
    return new Response("[" + results.join(", ") + "]");
}
EOF

cd "$TEMPDIR"
$CHISEL apply

# CHECK: Model defined: Person
# CHECK: End point defined: /dev/find
# CHECK: End point defined: /dev/find_many
# CHECK: End point defined: /dev/ins


$CURL --data '{
    "first_name":"Glauber",
    "last_name":"Costa",
    "age": 666,
    "human": true,
    "height": 10.01
}' -o - $CHISELD_HOST/dev/ins

# CHECK: ok

$CURL -o - $CHISELD_HOST/dev/find

# CHECK: HTTP/1.1 200 OK
# CHECK: Glauber Costa 666 true 10.01


$CURL --data '{
    "first_name":"Jan",
    "last_name":"Plhak",
    "age": 777,
    "human": true,
    "height": 11.1
}' -o - $CHISELD_HOST/dev/ins
# CHECK: ok


$CURL --data '{
    "first_name":"Pekka",
    "last_name":"Enberg",
    "age": 888,
    "human": false,
    "height": 12.2
}' -o - $CHISELD_HOST/dev/ins
# CHECK: ok

$CURL -o - $CHISELD_HOST/dev/find_many?first_name="Glauber"
# CHECK: [Glauber]

$CURL -o - $CHISELD_HOST/dev/find_many?first_name="Jan"
# CHECK: [Jan]

$CURL -o - $CHISELD_HOST/dev/find_many?first_name="Pekka"
# CHECK: [Pekka]
